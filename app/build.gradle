plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.example.todocompose'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.todocompose"
        minSdk 26
        targetSdk 34
        versionCode 14
        versionName "1.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        flavorDimensions.addAll('poc', 'prod')
    }

    signingConfigs {
        releaseConfig {
            keyAlias 'todo'
            keyPassword 'todosignkey'
            storeFile file('../signkey/todosignkey.jks')
            storePassword 'todosignkey'
        }
    }
    buildTypes {
        debug {
            minifyEnabled(false)
            signingConfig(signingConfigs.releaseConfig)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable(true)
        }
        release {
            minifyEnabled(true)
            signingConfig(signingConfigs.releaseConfig)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable(false)
        }
    }
    productFlavors {
        dev {
            dimension 'mode'
            applicationIdSuffix '.dev'
            versionNameSuffix '_dev'
        }
        prod {
            dimension 'mode'
        }
    }


    // Furnish output name
    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            def projectName = "Todo_Compose"
            def separatorUnderscore = "_"
            def versionName = variant.versionName
            def flavorName = variant.baseName.split("-")[0]
            def buildType = variant.buildType.name
            def apkName = projectName + separatorUnderscore + versionName
            System.out.println("outputs>>versionName is: " + versionName)
            System.out.println("outputs>>flavorName is: " + flavorName)
            System.out.println("outputs>>buildType is: " + buildType)
            System.out.println("outputs>>apkName is: " + apkName)
            outputFileName = apkName + ".apk"
            System.out.println("outputs>>outputFileName is: " + outputFileName)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    kotlin {
        jvmToolchain 17
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.7'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    flavorDimensions 'mode'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.9.21')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material3:material3-window-size-class'
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.core:core-ktx:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.10.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // ViewModel and LiveData
    def lifecycle_version = '2.6.2'
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycle utilities for Compose
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    //Room database
    def room_version = '2.6.1'
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"

    // In Android Studio, add the following dependency to your build.gradle.kts file:
    implementation("com.google.ai.client.generativeai:generativeai:0.1.1")
}